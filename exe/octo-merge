#!/usr/bin/env ruby

require "optparse"
require "octo_merge"
require "yaml"

options = if File.exist?(".octo-merge.yml")
  body = File.read(".octo-merge.yml")
  YAML.load(body)
else
  {}
end

# Symbolize keys
options = options.inject({}){|memo,(k,v)| memo[k.to_sym] = v; memo}

OptionParser.new do |opts|
  opts.banner = "Usage: octo-merge [options]"

  opts.on("--repo=REPO", "Repository (e.g.: 'rails/rails')") do |repo|
    options[:repo] = repo
  end

  opts.on("--dir=DIR", "Working directory (e.g.: '~/Dev/Rails/rails')") do |dir|
    options[:dir] = dir
  end

  opts.on("--pull_requests=PULL_REQUESTS", "Pull requests (e.g.: '23,42,66')") do |pull_requests|
    options[:pull_requests] = pull_requests
  end

  opts.on("--login=login", "Login (Your GitHub username)") do |login|
    options[:login] = login
  end

  opts.on("--password=password", "Password (Your GitHub API-Token)") do |password|
    options[:password] = password
  end

  opts.on("--strategy=STRATEGY", "Merge strategy (e.g.: 'MergeWithoutRebase')") do |strategy|
    options[:strategy] = strategy
  end

  opts.on("--query=QUERY", "Query to use in interactive mode (e.g.: 'label:ready-to-merge')") do |query|
    options[:query] = query
  end

  opts.on('--interactive', 'Select PullRequests within an interactive session') do |interactive|
    options[:interactive] = interactive
  end

  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end

  opts.on('-v', '--version', 'Display the version') do
    puts OctoMerge::VERSION
    exit
  end
end.parse!

OctoMerge.configure do |config|
  config.login = options[:login]
  config.password = options[:password]
end

options[:dir] = File.expand_path(options[:dir])
options[:strategy] = Object.const_get("OctoMerge::#{options[:strategy]}")

options[:pull_requests] = OctoMerge::InteractivePullRequests.get(options) if options[:interactive]
options[:pull_requests] = options[:pull_requests].to_s.split(",")

OctoMerge.run(
  repo: options[:repo],
  pull_request_numbers: options[:pull_requests],
  working_directory: options[:dir],
  strategy: options[:strategy]
)
