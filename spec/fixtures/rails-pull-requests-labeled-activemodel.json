{
  "total_count": 19,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/rails/rails/issues/23983",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/23983/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/23983/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/23983/events",
      "html_url": "https://github.com/rails/rails/pull/23983",
      "id": 137582762,
      "number": 23983,
      "title": "fix `as_json()` when passing hashes to 'include' array",
      "user": {
        "login": "rafal-brize",
        "id": 1155284,
        "avatar_url": "https://avatars.githubusercontent.com/u/1155284?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafal-brize",
        "html_url": "https://github.com/rafal-brize",
        "followers_url": "https://api.github.com/users/rafal-brize/followers",
        "following_url": "https://api.github.com/users/rafal-brize/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafal-brize/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafal-brize/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafal-brize/subscriptions",
        "organizations_url": "https://api.github.com/users/rafal-brize/orgs",
        "repos_url": "https://api.github.com/users/rafal-brize/repos",
        "events_url": "https://api.github.com/users/rafal-brize/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafal-brize/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "pixeltrix",
        "id": 6321,
        "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pixeltrix",
        "html_url": "https://github.com/pixeltrix",
        "followers_url": "https://api.github.com/users/pixeltrix/followers",
        "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
        "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
        "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
        "repos_url": "https://api.github.com/users/pixeltrix/repos",
        "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 1,
      "created_at": "2016-03-01T14:07:48Z",
      "updated_at": "2016-03-01T14:12:33Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/23983",
        "html_url": "https://github.com/rails/rails/pull/23983",
        "diff_url": "https://github.com/rails/rails/pull/23983.diff",
        "patch_url": "https://github.com/rails/rails/pull/23983.patch"
      },
      "body": "### Summary\r\n\r\nAs noticed by kenaniah in https://github.com/rails/rails/issues/22563\r\nthere is a bug in `as_json()` that prevents proper serialization\r\n\r\n```\r\nMyModel.first.as_json(include: [\r\n    :tags,\r\n    user: {\r\n        only: [:first_name, :last_name]\r\n    }, # BUG: rails doesn't return anything after the first hash config\r\n    card: {\r\n        only: [:name, :rp_name]\r\n    }\r\n])\r\n```\r\n\r\nThis is due to the fact that `user` and `card` are merged to a single hash.\r\nThe workaround is to wrap them in `{}` like this:\r\n\r\n```\r\nMyModel.first.as_json(include: [\r\n    :tags,\r\n    {\r\n        user: {\r\n            only: [:first_name, :last_name]\r\n        }\r\n    }, \r\n    {\r\n        card: {\r\n            only: [:name, :rp_name]\r\n        }\r\n    }\r\n])\r\n```\r\n\r\nWith this PR the workaround is not needed.\r\n\r\n",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/23971",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/23971/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/23971/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/23971/events",
      "html_url": "https://github.com/rails/rails/pull/23971",
      "id": 137368092,
      "number": 23971,
      "title": "Added proper test for new attribute not reflecting previous change.",
      "user": {
        "login": "mohitnatoo",
        "id": 10565622,
        "avatar_url": "https://avatars.githubusercontent.com/u/10565622?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mohitnatoo",
        "html_url": "https://github.com/mohitnatoo",
        "followers_url": "https://api.github.com/users/mohitnatoo/followers",
        "following_url": "https://api.github.com/users/mohitnatoo/following{/other_user}",
        "gists_url": "https://api.github.com/users/mohitnatoo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mohitnatoo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mohitnatoo/subscriptions",
        "organizations_url": "https://api.github.com/users/mohitnatoo/orgs",
        "repos_url": "https://api.github.com/users/mohitnatoo/repos",
        "events_url": "https://api.github.com/users/mohitnatoo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mohitnatoo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 1,
      "created_at": "2016-02-29T20:45:11Z",
      "updated_at": "2016-03-01T00:28:57Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/23971",
        "html_url": "https://github.com/rails/rails/pull/23971",
        "diff_url": "https://github.com/rails/rails/pull/23971.diff",
        "patch_url": "https://github.com/rails/rails/pull/23971.patch"
      },
      "body": "- The existing test description said previous change should not be affected but the assertion had previous changes value compared.\r\n- Added new test case that supports existing test case's description.",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/23675",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/23675/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/23675/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/23675/events",
      "html_url": "https://github.com/rails/rails/pull/23675",
      "id": 133555718,
      "number": 23675,
      "title": "Adjust to indifferent access around some ActiveModel::Errors methods",
      "user": {
        "login": "kachick",
        "id": 1180335,
        "avatar_url": "https://avatars.githubusercontent.com/u/1180335?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kachick",
        "html_url": "https://github.com/kachick",
        "followers_url": "https://api.github.com/users/kachick/followers",
        "following_url": "https://api.github.com/users/kachick/following{/other_user}",
        "gists_url": "https://api.github.com/users/kachick/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kachick/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kachick/subscriptions",
        "organizations_url": "https://api.github.com/users/kachick/orgs",
        "repos_url": "https://api.github.com/users/kachick/repos",
        "events_url": "https://api.github.com/users/kachick/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kachick/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "chancancode",
        "id": 55829,
        "avatar_url": "https://avatars.githubusercontent.com/u/55829?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chancancode",
        "html_url": "https://github.com/chancancode",
        "followers_url": "https://api.github.com/users/chancancode/followers",
        "following_url": "https://api.github.com/users/chancancode/following{/other_user}",
        "gists_url": "https://api.github.com/users/chancancode/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/chancancode/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chancancode/subscriptions",
        "organizations_url": "https://api.github.com/users/chancancode/orgs",
        "repos_url": "https://api.github.com/users/chancancode/repos",
        "events_url": "https://api.github.com/users/chancancode/events{/privacy}",
        "received_events_url": "https://api.github.com/users/chancancode/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 1,
      "created_at": "2016-02-14T17:02:25Z",
      "updated_at": "2016-02-14T20:25:54Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/23675",
        "html_url": "https://github.com/rails/rails/pull/23675",
        "diff_url": "https://github.com/rails/rails/pull/23675.diff",
        "patch_url": "https://github.com/rails/rails/pull/23675.patch"
      },
      "body": "Adjusted to https://github.com/rails/rails/blob/6f8f2a2017e09d8d94c70761c70007ce72b984e7/activemodel/test/cases/errors_test.rb#L100-L105",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/23272",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/23272/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/23272/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/23272/events",
      "html_url": "https://github.com/rails/rails/pull/23272",
      "id": 129008449,
      "number": 23272,
      "title": "Allow to set custom attr reader for validator",
      "user": {
        "login": "printercu",
        "id": 1144890,
        "avatar_url": "https://avatars.githubusercontent.com/u/1144890?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/printercu",
        "html_url": "https://github.com/printercu",
        "followers_url": "https://api.github.com/users/printercu/followers",
        "following_url": "https://api.github.com/users/printercu/following{/other_user}",
        "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
        "organizations_url": "https://api.github.com/users/printercu/orgs",
        "repos_url": "https://api.github.com/users/printercu/repos",
        "events_url": "https://api.github.com/users/printercu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/printercu/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "arthurnn",
        "id": 833383,
        "avatar_url": "https://avatars.githubusercontent.com/u/833383?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/arthurnn",
        "html_url": "https://github.com/arthurnn",
        "followers_url": "https://api.github.com/users/arthurnn/followers",
        "following_url": "https://api.github.com/users/arthurnn/following{/other_user}",
        "gists_url": "https://api.github.com/users/arthurnn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/arthurnn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/arthurnn/subscriptions",
        "organizations_url": "https://api.github.com/users/arthurnn/orgs",
        "repos_url": "https://api.github.com/users/arthurnn/repos",
        "events_url": "https://api.github.com/users/arthurnn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/arthurnn/received_events",
        "type": "User",
        "site_admin": true
      },
      "milestone": null,
      "comments": 1,
      "created_at": "2016-01-27T02:28:34Z",
      "updated_at": "2016-01-27T02:32:54Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/23272",
        "html_url": "https://github.com/rails/rails/pull/23272",
        "diff_url": "https://github.com/rails/rails/pull/23272.diff",
        "patch_url": "https://github.com/rails/rails/pull/23272.patch"
      },
      "body": "This allows to use standard validators for value-objects like this\r\n```ruby\r\nvalidates_numericality_of :money_field, \r\n  greater_than: 0, \r\n  attr_reader: ->(attr) { send(attr).to_d }\r\n# assume that `money_field` returns specific money object\r\n```\r\n\r\n'Cause `read_attribute` is separate method now, it also allows to reuse standard validators\r\n\r\n```ruby\r\nclass MatrixDeterminantValidator < ActiveModel::NumericalityValidator\r\n  def read_attribute(*)\r\n    super.determinant\r\n  end\r\nend\r\n\r\n# and then\r\nvalidates :matrix_field, matrix_determinant: {greater_than: 0}\r\n```",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/22369",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/22369/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/22369/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/22369/events",
      "html_url": "https://github.com/rails/rails/pull/22369",
      "id": 118219928,
      "number": 22369,
      "title": "Add :except option to validations",
      "user": {
        "login": "randoum",
        "id": 3615944,
        "avatar_url": "https://avatars.githubusercontent.com/u/3615944?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/randoum",
        "html_url": "https://github.com/randoum",
        "followers_url": "https://api.github.com/users/randoum/followers",
        "following_url": "https://api.github.com/users/randoum/following{/other_user}",
        "gists_url": "https://api.github.com/users/randoum/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/randoum/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/randoum/subscriptions",
        "organizations_url": "https://api.github.com/users/randoum/orgs",
        "repos_url": "https://api.github.com/users/randoum/repos",
        "events_url": "https://api.github.com/users/randoum/events{/privacy}",
        "received_events_url": "https://api.github.com/users/randoum/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        },
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
          "name": "activerecord",
          "color": "0b02e1"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "matthewd",
        "id": 1034,
        "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/matthewd",
        "html_url": "https://github.com/matthewd",
        "followers_url": "https://api.github.com/users/matthewd/followers",
        "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
        "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
        "organizations_url": "https://api.github.com/users/matthewd/orgs",
        "repos_url": "https://api.github.com/users/matthewd/repos",
        "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/matthewd/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 1,
      "created_at": "2015-11-21T20:49:03Z",
      "updated_at": "2016-01-10T03:25:18Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/22369",
        "html_url": "https://github.com/rails/rails/pull/22369",
        "diff_url": "https://github.com/rails/rails/pull/22369.diff",
        "patch_url": "https://github.com/rails/rails/pull/22369.patch"
      },
      "body": "he same way that `ActiveModel::Validations::ClassMethods#validates` accepts the option `on` to specify the contexts where this validation is active, I'm adding the option `except` to exclude contexts where the validation is active.\r\n\r\n**Use case**\r\nPublication has many Page, AttachmentFile, Image, Comments etc...\r\n\r\nAll those model have their own set of validation that execute on create and on update. Few of them are quite expensive (such as triggering database access to verify uniqueness)\r\n\r\nPublication can be *published*. Before publishing we run a specific set of validations with `on: :publishing` options. Those validation are not needed for the model to exist on the database, but needed for the publishing operation. But, we don't want to run again the expensive original sets of validation, we assume they are already valid anyhow because the record exists in the database.\r\n\r\n**How to do**\r\nCurrently, this works perfectly:\r\n\r\n```\r\nwith_options unless: Proc.new { |record| record.validation_context == :publishing } do |record|\r\n  record.validates_presence_of :things\r\n  record.validates_uniqueness_of :fields, scope: :publication_id\r\nend\r\n\r\nwith_options on: :publishing do |record|\r\n  record.validates_presence_of :pages\r\nend\r\n```\r\n\r\n**PR**\r\nBut it is not very intuitive and require to dive a bit into the source code to find about validation_context before being able to implement it.\r\n\r\nThis PR is to be able to write:\r\n\r\n```\r\nwith_options except: :publishing do |record|\r\n  ...\r\nend\r\n```",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/20962",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/20962/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/20962/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/20962/events",
      "html_url": "https://github.com/rails/rails/pull/20962",
      "id": 96225280,
      "number": 20962,
      "title": "Return message if attribute has .base suffix",
      "user": {
        "login": "adam12",
        "id": 17083,
        "avatar_url": "https://avatars.githubusercontent.com/u/17083?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adam12",
        "html_url": "https://github.com/adam12",
        "followers_url": "https://api.github.com/users/adam12/followers",
        "following_url": "https://api.github.com/users/adam12/following{/other_user}",
        "gists_url": "https://api.github.com/users/adam12/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adam12/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adam12/subscriptions",
        "organizations_url": "https://api.github.com/users/adam12/orgs",
        "repos_url": "https://api.github.com/users/adam12/repos",
        "events_url": "https://api.github.com/users/adam12/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adam12/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 0,
      "created_at": "2015-07-21T04:43:14Z",
      "updated_at": "2016-01-10T16:37:48Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/20962",
        "html_url": "https://github.com/rails/rails/pull/20962",
        "diff_url": "https://github.com/rails/rails/pull/20962.diff",
        "patch_url": "https://github.com/rails/rails/pull/20962.patch"
      },
      "body": "Error messages created by the saving of associated models (via\r\n`autosave: true` on association or other) are namespaced and separated\r\nby a period. Any error messages set by the associated model on their\r\nbase attribute should be returned in their entirety, and not prefixed\r\nwith a humanized representation of the attribute name.\r\n\r\nPossible fix for #19863",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/20886",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/20886/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/20886/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/20886/events",
      "html_url": "https://github.com/rails/rails/pull/20886",
      "id": 95129384,
      "number": 20886,
      "title": "Fix param_key when model is using relative model naming in base classes",
      "user": {
        "login": "BenMorganIO",
        "id": 3117356,
        "avatar_url": "https://avatars.githubusercontent.com/u/3117356?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BenMorganIO",
        "html_url": "https://github.com/BenMorganIO",
        "followers_url": "https://api.github.com/users/BenMorganIO/followers",
        "following_url": "https://api.github.com/users/BenMorganIO/following{/other_user}",
        "gists_url": "https://api.github.com/users/BenMorganIO/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/BenMorganIO/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/BenMorganIO/subscriptions",
        "organizations_url": "https://api.github.com/users/BenMorganIO/orgs",
        "repos_url": "https://api.github.com/users/BenMorganIO/repos",
        "events_url": "https://api.github.com/users/BenMorganIO/events{/privacy}",
        "received_events_url": "https://api.github.com/users/BenMorganIO/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": true,
      "assignee": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 7,
      "created_at": "2015-07-15T07:56:40Z",
      "updated_at": "2016-01-10T16:42:06Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/20886",
        "html_url": "https://github.com/rails/rails/pull/20886",
        "diff_url": "https://github.com/rails/rails/pull/20886.diff",
        "patch_url": "https://github.com/rails/rails/pull/20886.patch"
      },
      "body": "__TL;DR__: Models that inherit from an `Example::Base` instead of a module do not have their namespace removed in their `param_key` or `route_key`.\r\n\r\n---\r\n\r\nWhen developing, I've discovered that I opt for using abstract classes instead of modules to contain code. This same style is done with Spree; a large open-source Rails app that we can use as an example.\r\n\r\nSpree has a [`Spree::Base`](https://github.com/spree/spree/blob/master/core/app/models/spree/base.rb) which they use to pump methods and `include`s into that many classes might use. Then, when creating a new class such as [`Spree::Asset`](https://github.com/spree/spree/blob/master/core/app/models/spree/asset.rb), they will inherit from `Spree::Base` instead of `ActiveRecord::Base`.\r\n\r\nExcept, the issue is that the `param_key` to that object is different than when you extend from a module.\r\n\r\nTo give you an example:\r\n\r\n```ruby\r\nmodule Blog\r\n  def self.use_relative_model_naming\r\n    true\r\n  end\r\n\r\n  class Post < ActiveRecord::Base\r\n  end\r\nend\r\n\r\np Blog::Post.model_name.param_key\r\n# => \"post\"\r\n\r\nmodule Asset\r\n  class Base < ActiveRecord::Base\r\n    def self.use_relative_model_naming\r\n      true\r\n    end\r\n  end\r\nend\r\n\r\nmodule Asset\r\n  class Image < Asset::Base\r\n  end\r\nend\r\n\r\np Asset::Image.model_name.param_key\r\n# => \"asset_image\"\r\n```\r\n\r\nAs you can see in the example above, there's a difference. A work-around is as so:\r\n\r\n```ruby\r\nmodule Asset\r\n  def self.use_relative_model_naming\r\n    true\r\n  end\r\n\r\n  class Base < ActiveRecord::Base\r\n  end\r\nend\r\n```\r\n\r\nThis can be done, but its not as elegant. I think Rails should be able to expect if a class is using it in a child rather than the parent module.\r\n\r\nI supplied two new test models into Active Support to highlight the extending from different classes. Specs were made to ensure they followed the exact same 8 tests that the others used. Then the fix was made to use the classes namespace if the current class has `#use_relative_model_naming` returning `true`.",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/20641",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/20641/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/20641/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/20641/events",
      "html_url": "https://github.com/rails/rails/pull/20641",
      "id": 89711490,
      "number": 20641,
      "title": "Add normalized message to errors detail",
      "user": {
        "login": "Rafe",
        "id": 208840,
        "avatar_url": "https://avatars.githubusercontent.com/u/208840?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rafe",
        "html_url": "https://github.com/Rafe",
        "followers_url": "https://api.github.com/users/Rafe/followers",
        "following_url": "https://api.github.com/users/Rafe/following{/other_user}",
        "gists_url": "https://api.github.com/users/Rafe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Rafe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Rafe/subscriptions",
        "organizations_url": "https://api.github.com/users/Rafe/orgs",
        "repos_url": "https://api.github.com/users/Rafe/repos",
        "events_url": "https://api.github.com/users/Rafe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Rafe/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        },
        {
          "url": "https://api.github.com/repos/rails/rails/labels/Needs%20work",
          "name": "Needs work",
          "color": "000000"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 3,
      "created_at": "2015-06-20T03:47:04Z",
      "updated_at": "2016-02-10T17:04:30Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/20641",
        "html_url": "https://github.com/rails/rails/pull/20641",
        "diff_url": "https://github.com/rails/rails/pull/20641.diff",
        "patch_url": "https://github.com/rails/rails/pull/20641.patch"
      },
      "body": "Adding generated message to ActiveModel::Errors details.\r\nProvide more convenience for customize errors display, rather than zipping messages and details or call generate_message again.\r\n\r\nAlso considering remove the duplication on messages and details, merging messages and details to a single hash. But that will probably drop the support for directly manipulate messages, like `person.errors.messages[:base] << 'another error message'.`\r\nBut since directly add message does not work with details, maybe that is a direction we can consider?",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/19379",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/19379/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/19379/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/19379/events",
      "html_url": "https://github.com/rails/rails/pull/19379",
      "id": 62532071,
      "number": 19379,
      "title": "allow serializable objects to bypass full attributes hash construction...",
      "user": {
        "login": "johncronan",
        "id": 159399,
        "avatar_url": "https://avatars.githubusercontent.com/u/159399?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/johncronan",
        "html_url": "https://github.com/johncronan",
        "followers_url": "https://api.github.com/users/johncronan/followers",
        "following_url": "https://api.github.com/users/johncronan/following{/other_user}",
        "gists_url": "https://api.github.com/users/johncronan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/johncronan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/johncronan/subscriptions",
        "organizations_url": "https://api.github.com/users/johncronan/orgs",
        "repos_url": "https://api.github.com/users/johncronan/repos",
        "events_url": "https://api.github.com/users/johncronan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/johncronan/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 6,
      "created_at": "2015-03-17T22:22:22Z",
      "updated_at": "2015-10-20T21:01:55Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/19379",
        "html_url": "https://github.com/rails/rails/pull/19379",
        "diff_url": "https://github.com/rails/rails/pull/19379.diff",
        "patch_url": "https://github.com/rails/rails/pull/19379.patch"
      },
      "body": "...by supplying an attribute_names method (as activerecord does).\r\n\r\nWhen doing something like:\r\n    relation.as_json except: [:expensive_field]\r\n\r\nwhere expensive_field is, say, a large JSON object in Postgres, we still have to incur the expense of decoding that field, because serializable_hash calls attributes.keys, which builds the hash and then discards its values.\r\n\r\nThis patch makes serializable_hash check first to see if there is an attribute_names method, such as the one provided by ActiveRecord, and if so it will use that instead.",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/19350",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/19350/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/19350/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/19350/events",
      "html_url": "https://github.com/rails/rails/pull/19350",
      "id": 61944906,
      "number": 19350,
      "title": "Fix mutliline anchor test in format validations for edge case",
      "user": {
        "login": "janlelis",
        "id": 111510,
        "avatar_url": "https://avatars.githubusercontent.com/u/111510?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janlelis",
        "html_url": "https://github.com/janlelis",
        "followers_url": "https://api.github.com/users/janlelis/followers",
        "following_url": "https://api.github.com/users/janlelis/following{/other_user}",
        "gists_url": "https://api.github.com/users/janlelis/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/janlelis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/janlelis/subscriptions",
        "organizations_url": "https://api.github.com/users/janlelis/orgs",
        "repos_url": "https://api.github.com/users/janlelis/repos",
        "events_url": "https://api.github.com/users/janlelis/events{/privacy}",
        "received_events_url": "https://api.github.com/users/janlelis/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 0,
      "created_at": "2015-03-16T02:14:12Z",
      "updated_at": "2015-10-20T21:02:01Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/19350",
        "html_url": "https://github.com/rails/rails/pull/19350",
        "diff_url": "https://github.com/rails/rails/pull/19350.diff",
        "patch_url": "https://github.com/rails/rails/pull/19350.patch"
      },
      "body": "```ruby\r\n/...$/ # => line-ending semantic\r\n/...\\$/ # => non line-ending semantic\r\n/...\\\\$/ # => line-ending semantic\r\n/...\\\\\\$/ # => non line-ending semantic etc.\r\n```",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/17116",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/17116/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/17116/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/17116/events",
      "html_url": "https://github.com/rails/rails/pull/17116",
      "id": 44442685,
      "number": 17116,
      "title": "Fix for issue #17115: ActiveModel::AcceptanceValidator initialize causes an error because the overridden hash is not HashWithIndifferentAccess",
      "user": {
        "login": "mikkelwf",
        "id": 1061520,
        "avatar_url": "https://avatars.githubusercontent.com/u/1061520?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mikkelwf",
        "html_url": "https://github.com/mikkelwf",
        "followers_url": "https://api.github.com/users/mikkelwf/followers",
        "following_url": "https://api.github.com/users/mikkelwf/following{/other_user}",
        "gists_url": "https://api.github.com/users/mikkelwf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mikkelwf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mikkelwf/subscriptions",
        "organizations_url": "https://api.github.com/users/mikkelwf/orgs",
        "repos_url": "https://api.github.com/users/mikkelwf/repos",
        "events_url": "https://api.github.com/users/mikkelwf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mikkelwf/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 1,
      "created_at": "2014-09-30T13:20:48Z",
      "updated_at": "2015-10-20T21:03:52Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/17116",
        "html_url": "https://github.com/rails/rails/pull/17116",
        "diff_url": "https://github.com/rails/rails/pull/17116.diff",
        "patch_url": "https://github.com/rails/rails/pull/17116.patch"
      },
      "body": "Changed the hash from ordinary to HashWithIndifferentAccess in order to fix the \"attributes cannot be blank\" error thrown if the super class cannot extract \"attributes\" from the hash.",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/17104",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/17104/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/17104/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/17104/events",
      "html_url": "https://github.com/rails/rails/pull/17104",
      "id": 44332120,
      "number": 17104,
      "title": "Fix numericality validation with large numbers",
      "user": {
        "login": "jduff",
        "id": 441,
        "avatar_url": "https://avatars.githubusercontent.com/u/441?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jduff",
        "html_url": "https://github.com/jduff",
        "followers_url": "https://api.github.com/users/jduff/followers",
        "following_url": "https://api.github.com/users/jduff/following{/other_user}",
        "gists_url": "https://api.github.com/users/jduff/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jduff/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jduff/subscriptions",
        "organizations_url": "https://api.github.com/users/jduff/orgs",
        "repos_url": "https://api.github.com/users/jduff/repos",
        "events_url": "https://api.github.com/users/jduff/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jduff/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 7,
      "created_at": "2014-09-29T18:23:51Z",
      "updated_at": "2015-10-20T21:03:54Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/17104",
        "html_url": "https://github.com/rails/rails/pull/17104",
        "diff_url": "https://github.com/rails/rails/pull/17104.diff",
        "patch_url": "https://github.com/rails/rails/pull/17104.patch"
      },
      "body": "When you use `LARGE_NUMBER-1` `Kernel.Float` actually rounds the number up to `LARGE_NUMBER`. Solution I took was to check if the number was `Numeric` and if it is you don't need to use `Kernel.Float` to parse it.\r\n\r\nI'm not 100% sure on the approach I took so would love feedback from people more experienced with this piece of code.\r\n\r\n@rafaelfranca @arthurnn suggested I tag you on this PR.",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/15862",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/15862/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/15862/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/15862/events",
      "html_url": "https://github.com/rails/rails/pull/15862",
      "id": 36250146,
      "number": 15862,
      "title": "Create an ActiveModel::Identity mixin",
      "user": {
        "login": "afeld",
        "id": 86842,
        "avatar_url": "https://avatars.githubusercontent.com/u/86842?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/afeld",
        "html_url": "https://github.com/afeld",
        "followers_url": "https://api.github.com/users/afeld/followers",
        "following_url": "https://api.github.com/users/afeld/following{/other_user}",
        "gists_url": "https://api.github.com/users/afeld/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/afeld/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/afeld/subscriptions",
        "organizations_url": "https://api.github.com/users/afeld/orgs",
        "repos_url": "https://api.github.com/users/afeld/repos",
        "events_url": "https://api.github.com/users/afeld/events{/privacy}",
        "received_events_url": "https://api.github.com/users/afeld/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 9,
      "created_at": "2014-06-22T19:17:50Z",
      "updated_at": "2015-10-20T21:04:57Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/15862",
        "html_url": "https://github.com/rails/rails/pull/15862",
        "diff_url": "https://github.com/rails/rails/pull/15862.diff",
        "patch_url": "https://github.com/rails/rails/pull/15862.patch"
      },
      "body": "This commit moves ActiveRecord::Core#== and #hash into a module in ActiveModel.  Any class can now include this mixin to have two instances be considered equal based on their `id`.\r\n\r\nI considered making the attribute used for comparison configurable, but it seemed like a lot of complication for little gain.  Sound reasonable?",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/15580",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/15580/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/15580/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/15580/events",
      "html_url": "https://github.com/rails/rails/pull/15580",
      "id": 35248905,
      "number": 15580,
      "title": "Nested error messages from associations",
      "user": {
        "login": "crismali",
        "id": 3209502,
        "avatar_url": "https://avatars.githubusercontent.com/u/3209502?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/crismali",
        "html_url": "https://github.com/crismali",
        "followers_url": "https://api.github.com/users/crismali/followers",
        "following_url": "https://api.github.com/users/crismali/following{/other_user}",
        "gists_url": "https://api.github.com/users/crismali/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/crismali/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/crismali/subscriptions",
        "organizations_url": "https://api.github.com/users/crismali/orgs",
        "repos_url": "https://api.github.com/users/crismali/repos",
        "events_url": "https://api.github.com/users/crismali/events{/privacy}",
        "received_events_url": "https://api.github.com/users/crismali/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": {
        "url": "https://api.github.com/repos/rails/rails/milestones/34",
        "html_url": "https://github.com/rails/rails/milestones/5.0.0%20[temp]",
        "labels_url": "https://api.github.com/repos/rails/rails/milestones/34/labels",
        "id": 665192,
        "number": 34,
        "title": "5.0.0 [temp]",
        "description": "",
        "creator": {
          "login": "rafaelfranca",
          "id": 47848,
          "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rafaelfranca",
          "html_url": "https://github.com/rafaelfranca",
          "followers_url": "https://api.github.com/users/rafaelfranca/followers",
          "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
          "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
          "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
          "repos_url": "https://api.github.com/users/rafaelfranca/repos",
          "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 50,
        "closed_issues": 8,
        "state": "open",
        "created_at": "2014-05-21T00:58:22Z",
        "updated_at": "2016-02-23T16:18:35Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 3,
      "created_at": "2014-06-08T22:17:37Z",
      "updated_at": "2015-10-20T21:05:10Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/15580",
        "html_url": "https://github.com/rails/rails/pull/15580",
        "diff_url": "https://github.com/rails/rails/pull/15580.diff",
        "patch_url": "https://github.com/rails/rails/pull/15580.patch"
      },
      "body": "Now when a nested model has an error, it will be nested in the base\r\nmodel's error messages hash in addition to the nested model's error\r\nmessages hash.\r\n\r\nFor example, if a user has two posts that are invalid (the first one\r\nlacks a title and the other lacks a body), we get:\r\n```ruby\r\n    {\r\n      :\"posts.title\" => [\"can't be blank\"],\r\n      :\"posts.body\" => [\"can't be blank\"],\r\n      :posts => [\r\n        { title: [\"can't be blank\"] },\r\n        { body: [\"can't be blank\"] }\r\n      ]\r\n    }\r\n```\r\nInstead of just:\r\n```ruby\r\n    {\r\n      :\"posts.title\" => [\"can't be blank\"],\r\n      :\"posts.body\" => [\"can't be blank\"]\r\n    }\r\n```\r\n\r\nThis makes it much easier to render errors on a fat client app when dealing with nested models.",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/14260",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/14260/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/14260/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/14260/events",
      "html_url": "https://github.com/rails/rails/pull/14260",
      "id": 28633411,
      "number": 14260,
      "title": "Activemodal::Errors added methods error_message_format and i18n_priority_format",
      "user": {
        "login": "TemaMix",
        "id": 927440,
        "avatar_url": "https://avatars.githubusercontent.com/u/927440?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TemaMix",
        "html_url": "https://github.com/TemaMix",
        "followers_url": "https://api.github.com/users/TemaMix/followers",
        "following_url": "https://api.github.com/users/TemaMix/following{/other_user}",
        "gists_url": "https://api.github.com/users/TemaMix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/TemaMix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TemaMix/subscriptions",
        "organizations_url": "https://api.github.com/users/TemaMix/orgs",
        "repos_url": "https://api.github.com/users/TemaMix/repos",
        "events_url": "https://api.github.com/users/TemaMix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/TemaMix/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        },
        {
          "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
          "name": "needs feedback",
          "color": "ededed"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 9,
      "created_at": "2014-03-03T16:17:31Z",
      "updated_at": "2016-02-29T14:32:30Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/14260",
        "html_url": "https://github.com/rails/rails/pull/14260",
        "diff_url": "https://github.com/rails/rails/pull/14260.diff",
        "patch_url": "https://github.com/rails/rails/pull/14260.patch"
      },
      "body": "error_message_format  - returns an I18n key of an error message taking into consideration the format of an error message. If none found the default value is being returned (errors.format).\r\n\r\nFormats are first looked up in \"activerecord.errors.models.MODEL.attributes.ATTRIBUTE.format\", if it's not there, it's looked up in \"activerecord.errors.models.MODEL.format\" and if that is not there also, it returns default format  (e.g. \"errors.format\").\r\n\r\n\r\ni18n_priority_format - returns array that defined format priority key for i18n scope an error message. Last array element have highest priority.\r\n   person.errors.i18n_priority_format # => [:\"errors.format\"]\r\n   person.errors.i18n_priority_format(:name)\r\n    # => [:\"errors.format\",\r\n    #         :\"activemodel.errors.models.person.format\",\r\n    #         :\"activemodel.errors.models.person.attributes.name.format\"]\r\n",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/14141",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/14141/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/14141/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/14141/events",
      "html_url": "https://github.com/rails/rails/pull/14141",
      "id": 28048584,
      "number": 14141,
      "title": "Pass instance to I18n when translating error",
      "user": {
        "login": "printercu",
        "id": 1144890,
        "avatar_url": "https://avatars.githubusercontent.com/u/1144890?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/printercu",
        "html_url": "https://github.com/printercu",
        "followers_url": "https://api.github.com/users/printercu/followers",
        "following_url": "https://api.github.com/users/printercu/following{/other_user}",
        "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
        "organizations_url": "https://api.github.com/users/printercu/orgs",
        "repos_url": "https://api.github.com/users/printercu/repos",
        "events_url": "https://api.github.com/users/printercu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/printercu/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 0,
      "created_at": "2014-02-21T15:20:35Z",
      "updated_at": "2015-10-20T21:05:51Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/14141",
        "html_url": "https://github.com/rails/rails/pull/14141",
        "diff_url": "https://github.com/rails/rails/pull/14141.diff",
        "patch_url": "https://github.com/rails/rails/pull/14141.patch"
      },
      "body": "It'll allow to do like this:\r\n```ruby\r\n# inside model that has .title\r\nvalidates_numericality_of :quantity, greater_then: 0,\r\n  title: ->(h) { h[:instance].title }\r\n```\r\nwith translations\r\n```yaml\r\nerrors:\r\n  models:\r\n    my_model:\r\n      greater_then: of %{title} must be greater than %{count}\r\n```\r\n",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/14067",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/14067/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/14067/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/14067/events",
      "html_url": "https://github.com/rails/rails/pull/14067",
      "id": 27644696,
      "number": 14067,
      "title": "Add documentation/tests around interpolated values in ActiveModel::Errors",
      "user": {
        "login": "tbloncar",
        "id": 2092395,
        "avatar_url": "https://avatars.githubusercontent.com/u/2092395?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tbloncar",
        "html_url": "https://github.com/tbloncar",
        "followers_url": "https://api.github.com/users/tbloncar/followers",
        "following_url": "https://api.github.com/users/tbloncar/following{/other_user}",
        "gists_url": "https://api.github.com/users/tbloncar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tbloncar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tbloncar/subscriptions",
        "organizations_url": "https://api.github.com/users/tbloncar/orgs",
        "repos_url": "https://api.github.com/users/tbloncar/repos",
        "events_url": "https://api.github.com/users/tbloncar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tbloncar/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 3,
      "created_at": "2014-02-15T08:02:24Z",
      "updated_at": "2015-10-20T21:05:56Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/14067",
        "html_url": "https://github.com/rails/rails/pull/14067",
        "diff_url": "https://github.com/rails/rails/pull/14067.diff",
        "patch_url": "https://github.com/rails/rails/pull/14067.patch"
      },
      "body": "Document and test :count option in #add and #added? methods. The purpose of this documentation is to make it clear that the #add and #added? methods should be invoked with the :count option for messages that make use of an interpolated count (by default). Failure to do so will result in an I18n::MissingInterpolationArgument exception.",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/11249",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/11249/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/11249/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/11249/events",
      "html_url": "https://github.com/rails/rails/pull/11249",
      "id": 16265733,
      "number": 11249,
      "title": "explicit declare AS::Callbacks dependencies in AM::Validations",
      "user": {
        "login": "yangchenyun",
        "id": 1043403,
        "avatar_url": "https://avatars.githubusercontent.com/u/1043403?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yangchenyun",
        "html_url": "https://github.com/yangchenyun",
        "followers_url": "https://api.github.com/users/yangchenyun/followers",
        "following_url": "https://api.github.com/users/yangchenyun/following{/other_user}",
        "gists_url": "https://api.github.com/users/yangchenyun/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yangchenyun/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yangchenyun/subscriptions",
        "organizations_url": "https://api.github.com/users/yangchenyun/orgs",
        "repos_url": "https://api.github.com/users/yangchenyun/repos",
        "events_url": "https://api.github.com/users/yangchenyun/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yangchenyun/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": null,
      "comments": 9,
      "created_at": "2013-07-02T14:17:48Z",
      "updated_at": "2015-10-20T21:06:57Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/11249",
        "html_url": "https://github.com/rails/rails/pull/11249",
        "diff_url": "https://github.com/rails/rails/pull/11249.diff",
        "patch_url": "https://github.com/rails/rails/pull/11249.patch"
      },
      "body": "AM::Validations doesn't use AM::Callbacks methods, AM::Validations only use AS::Callbacks behaviors, make it more explicit.",
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/rails/rails/issues/8189",
      "repository_url": "https://api.github.com/repos/rails/rails",
      "labels_url": "https://api.github.com/repos/rails/rails/issues/8189/labels{/name}",
      "comments_url": "https://api.github.com/repos/rails/rails/issues/8189/comments",
      "events_url": "https://api.github.com/repos/rails/rails/issues/8189/events",
      "html_url": "https://github.com/rails/rails/pull/8189",
      "id": 8296100,
      "number": 8189,
      "title": "Move multi-parameter attributes from ActiveRecord to ActiveModel",
      "user": {
        "login": "georgebrock",
        "id": 35861,
        "avatar_url": "https://avatars.githubusercontent.com/u/35861?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/georgebrock",
        "html_url": "https://github.com/georgebrock",
        "followers_url": "https://api.github.com/users/georgebrock/followers",
        "following_url": "https://api.github.com/users/georgebrock/following{/other_user}",
        "gists_url": "https://api.github.com/users/georgebrock/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/georgebrock/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/georgebrock/subscriptions",
        "organizations_url": "https://api.github.com/users/georgebrock/orgs",
        "repos_url": "https://api.github.com/users/georgebrock/repos",
        "events_url": "https://api.github.com/users/georgebrock/events{/privacy}",
        "received_events_url": "https://api.github.com/users/georgebrock/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
          "name": "actionpack",
          "color": "FFF700"
        },
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
          "name": "activemodel",
          "color": "00E5FF"
        },
        {
          "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
          "name": "activerecord",
          "color": "0b02e1"
        }
      ],
      "state": "open",
      "locked": true,
      "assignee": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "milestone": {
        "url": "https://api.github.com/repos/rails/rails/milestones/34",
        "html_url": "https://github.com/rails/rails/milestones/5.0.0%20[temp]",
        "labels_url": "https://api.github.com/repos/rails/rails/milestones/34/labels",
        "id": 665192,
        "number": 34,
        "title": "5.0.0 [temp]",
        "description": "",
        "creator": {
          "login": "rafaelfranca",
          "id": 47848,
          "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rafaelfranca",
          "html_url": "https://github.com/rafaelfranca",
          "followers_url": "https://api.github.com/users/rafaelfranca/followers",
          "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
          "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
          "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
          "repos_url": "https://api.github.com/users/rafaelfranca/repos",
          "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 50,
        "closed_issues": 8,
        "state": "open",
        "created_at": "2014-05-21T00:58:22Z",
        "updated_at": "2016-02-23T16:18:35Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 31,
      "created_at": "2012-11-12T17:19:01Z",
      "updated_at": "2014-09-03T02:57:52Z",
      "closed_at": null,
      "pull_request": {
        "url": "https://api.github.com/repos/rails/rails/pulls/8189",
        "html_url": "https://github.com/rails/rails/pull/8189",
        "diff_url": "https://github.com/rails/rails/pull/8189.diff",
        "patch_url": "https://github.com/rails/rails/pull/8189.patch"
      },
      "body": "Multi-parameter attributes (used to build a complex type like a `Date` from several simple values that can be easily POSTed) are currently implemented in `ActiveRecord::AttributeAssignment`. This is pretty frustrating if you're trying to use an `ActiveModel::Model` with `Date` or `DateTime` fields.\r\n\r\nI've fixed this by moving multi-parameter conversion to the `ActionController::Parameters` class, so it happens before the value hits the model. IMO the model layer shouldn't need to be aware of the format that's used to pass the data from the client to the server.\r\n\r\nTo support this the type that the values should be re-assembled into is included in the form (e.g. `<input type=\"hidden\" name=\"my_model[created_at(type)]\" value=\"Date\">`) instead of being determined from the model schema.\r\n\r\nThe main aim was to get multi-parameter attributes working with `ActiveModel`, but a nice side effect of this implementation is that it becomes very easy to register custom types. For example, you could easily submit an amount of money as a currency and an amount and have it converted to your own custom `Money` class:\r\n\r\n        # In an initializer somewhere:\r\n        ActionController::MultiParameterConverter.register_type('Money') { |currency, amount|\r\n          Money.new(currency, amount)\r\n        }\r\n\r\n        # View:\r\n        <input type=\"text\" name=\"my_model[price(1)]\" value=\"$\">\r\n        <input type=\"text\" name=\"my_model[price(2f)]\" value=\"50.00\">\r\n        <input type=\"hidden\" name=\"my_model[price(type)]\" value=\"Money\">\r\n\r\nThis isn't a finished implementation yet. It needs documentation, and the `ActiveRecord` implementation needs to be deprecated or removed. I've added multi-parameter support to `ActionController` and updated the `date_select`, `datetime_select` and `time_select` helpers to use the new implementation. I figured this was far enough to get some feedback.\r\n\r\n---\r\n\r\n**Edit:** Renamed from *Move multi-parameter attributes from ActiveRecord to ActionController* to *Move multi-parameter attributes from ActiveRecord to ActiveModel* to reflect the current state of the change.",
      "score": 1.0
    }
  ]
}
